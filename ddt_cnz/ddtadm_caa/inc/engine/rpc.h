/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_H_RPCGEN
#define _RPC_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


enum answerCode {
	HANDLED = 0,
	UNHANDLED = 1,
};
typedef enum answerCode answerCode;

struct lastTransactionAnswer {
	answerCode code;
	u_long lastTransactionID;
};
typedef struct lastTransactionAnswer lastTransactionAnswer;

struct BlockInfo {
	char *theSourceID;
	u_long theBlockID;
	struct {
		u_int theBlockData_len;
		u_char *theBlockData_val;
	} theBlockData;
};
typedef struct BlockInfo BlockInfo;

#define BGW_CDRB_RECEIVER BGW_RPC_PROG_NUMBER
#define A 1

#if defined(__STDC__) || defined(__cplusplus)
#define LASTTRANSACTION 1
extern  enum clnt_stat lasttransaction_1(char **, lastTransactionAnswer *, CLIENT *);
extern  bool_t lasttransaction_1_svc(char **, lastTransactionAnswer *, struct svc_req *);
#define PUT 2
extern  enum clnt_stat put_1(BlockInfo *, answerCode *, CLIENT *);
extern  bool_t put_1_svc(BlockInfo *, answerCode *, struct svc_req *);
extern int bgw_cdrb_receiver_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define LASTTRANSACTION 1
extern  enum clnt_stat lasttransaction_1();
extern  bool_t lasttransaction_1_svc();
#define PUT 2
extern  enum clnt_stat put_1();
extern  bool_t put_1_svc();
extern int bgw_cdrb_receiver_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_answerCode (XDR *, answerCode*);
extern  bool_t xdr_lastTransactionAnswer (XDR *, lastTransactionAnswer*);
extern  bool_t xdr_BlockInfo (XDR *, BlockInfo*);

#else /* K&R C */
extern bool_t xdr_answerCode ();
extern bool_t xdr_lastTransactionAnswer ();
extern bool_t xdr_BlockInfo ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_H_RPCGEN */
